{"version":3,"sources":["webpack:///./src/views/html/race.vue?2401","webpack:///src/views/html/race.vue","webpack:///./src/views/html/race.vue?454f","webpack:///./src/views/html/race.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","ref","attrs","_v","staticRenderFns","components","data","raceData","exChangeRate","coinList","duration","isLoading","error","sendDataKr","fsym","tsym","limit","Apikey","chartData","priceHeader","priceData","methods","trColor","trCalssVal","change","getExChangeMoney","exChangeData","drawChart","chart","padding","numberFormatter","bigNumberPrefixes","label","x","y","horizontalCenter","verticalCenter","dx","fontSize","playButton","dy","hidden","events","on","event","target","isActive","play","stop","categoryAxis","renderer","grid","template","location","dataFields","category","minGridDistance","inversed","disabled","valueAxis","min","rangeChangeEasing","rangeChangeDuration","stepDuration","extraMax","series","categoryY","valueX","tooltipText","columns","strokeOpacity","column","cornerRadiusBottomRight","cornerRadiusTopRight","interpolationDuration","interpolationEasing","labelBullet","text","textAlign","zoomOutButton","responsive","enabled","useDefault","rules","push","relevant","pixelWidth","state","states","create","stateId","properties","paddingTop","paddingRight","paddingBottom","paddingLeft","adapter","add","fill","colors","getIndex","dataItem","index","interval","setInterval","nextYear","clearInterval","year","i","length","high","newData","itemsWithNonZero","invalidateRawData","zoom","start","end","dataItems","sortBySeries","1534464000","1536192000","1537920000","1539648000","1541376000","1543104000","1544832000","1546560000","1548288000","1550016000","1551744000","1553472000","1555200000","1556928000","1558656000","1560384000","1562112000","1563840000","1565568000","1567296000","1569024000","1570752000","1572480000","1574208000","1575936000","1577664000","1579392000","1581120000","1582848000","1584576000","1586304000","1588032000","1589760000","1591488000","1593216000","1594944000","1596672000","1598400000","1600128000","1601856000","1603584000","1605312000","1607040000","1608768000","1610496000","1612224000","1613952000","1615680000","1617408000","1619136000","1620864000","JSON","parse","stringify","allData","console","log","setTimeout","beforeDestroy","dispose","mounted","computed","isMobile","$vuetify","breakpoint","name","component"],"mappings":"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","file":"js/chunk-2d0d3249.cea623d0.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrap_coin_site\"},[_c('div',{staticClass:\"wrap_infor_chart\"},[_c('div',{ref:\"first\",staticClass:\"head\",attrs:{\"tabindex\":\"1\"}},[_c('h2',[_vm._v(\"AMChart,Axios Async, Race Cahrt 테스트\")])]),_c('div',{staticClass:\"chart_00 mt-5\",attrs:{\"id\":\"chartdiv\"}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n<div class=\"wrap_coin_site\">\r\n  <div class=\"wrap_infor_chart\">\r\n    <div class=\"head\" ref=\"first\" tabindex=\"1\">\r\n      <h2>AMChart,Axios Async, Race Cahrt 테스트</h2>\r\n    </div>\r\n\r\n    <div id=\"chartdiv\" class=\"chart_00 mt-5\"></div>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n// import LottieAnimation from \"lottie-web-vue\";\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\n// import am4lang_ko_KR from \"@amcharts/amcharts4/lang/ko_KR\";\r\nam4core.useTheme(am4themes_animated);\r\n\r\nexport default {\r\n  components: {\r\n    // LottieAnimation,\r\n  },\r\n  data() {\r\n    return {\r\n      raceData: {},\r\n      exChangeRate: [],\r\n      coinList: [{ name: \"XRP\" }],\r\n      duration: [\r\n        { text: \"일간 그래프\", val: \"histotime\" },\r\n        { text: \"시간 그래프\", val: \"histohour\" },\r\n        { text: \"분당 그래프\", val: \"histominute\" },\r\n      ],\r\n\r\n      isLoading: true,\r\n      error: null,\r\n      sendDataKr: {\r\n        duration: \"histominute\",\r\n        fsym: { name: \"XRP\" },\r\n        tsym: \"KRW\",\r\n        limit: \"50\",\r\n        Apikey:\r\n          \"bd1c741f37bd77cd9f5554daed59741b3a75101cf1b5437be864fb4e4bafb0d6\",\r\n      },\r\n      chartData: [],\r\n      priceHeader: [\r\n        { text: \"인덱스\", value: \"idx\", align: \"center\" },\r\n        { text: \"코인명\", value: \"name\", align: \"center\" },\r\n        { text: \"한국 ₩\", value: \"krw\", align: \"end\", width: \"150px\" },\r\n        { text: \"코프 %\", value: \"primium\", align: \"end\", width: \"150px\" },\r\n        { text: \"미국 $\", value: \"usd\", align: \"end\", width: \"150px\" },\r\n        {\r\n          text: \"하루동안 변동  ₩\",\r\n          value: \"CHANGEtime\",\r\n          align: \"end\",\r\n          width: \"150px\",\r\n        },\r\n      ],\r\n      priceData: [\r\n        [\r\n          {\r\n            img:\r\n              \"https://www.cryptocompare.com/media/37746347/xrp.png?width=25\",\r\n            name: \"XRP\",\r\n            krw: 1862.79,\r\n            usd: 1.513,\r\n            change24Hour: \"9.7\",\r\n            primium: \"8.1\",\r\n          },\r\n          {\r\n            img:\r\n              \"https://www.cryptocompare.com/media/37746235/ada.png?width=25\",\r\n            name: \"ADA\",\r\n            krw: 2531.01,\r\n            usd: 2.06,\r\n            change24Hour: \"6.7\",\r\n            primium: \"7.9\",\r\n          },\r\n          {\r\n            img:\r\n              \"https://www.cryptocompare.com/media/37746339/doge.png?width=25\",\r\n            name: \"DOGE\",\r\n            krw: 586.0688435339999,\r\n            usd: 0.4917,\r\n            change24Hour: \"-4.5\",\r\n            primium: \"5.1\",\r\n          },\r\n          {\r\n            img:\r\n              \"https://www.cryptocompare.com/media/37746880/bnb.png?width=25\",\r\n            name: \"BNB\",\r\n            krw: 643850.2788120001,\r\n            usd: 523.11,\r\n            change24Hour: \"8504.4\",\r\n            primium: \"8.1\",\r\n          },\r\n          {\r\n            img:\r\n              \"https://www.cryptocompare.com/media/37746243/ltc.png?width=25\",\r\n            name: \"LTC\",\r\n            krw: 372873.68,\r\n            usd: 303.1,\r\n            change24Hour: \"23597.4\",\r\n            primium: \"8.0\",\r\n          },\r\n        ],\r\n      ],\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    // exchange\r\n    trColor(inputVal) {\r\n      let trCalssVal = inputVal > 1 || inputVal == 1 ? \"up\" : \"down\";\r\n      return trCalssVal;\r\n    },\r\n    //차트 업데이트\r\n    change() {\r\n      (this.isLoading = true), this.chart1();\r\n    },\r\n    // 환률정보 가져오기\r\n    getExChangeMoney() {\r\n      let exChangeData = [\r\n        {\r\n          update: 1621469502161,\r\n          USDKRW: [1131.75],\r\n          JPYKRW: [10.343],\r\n          CNYKRW: [176.007],\r\n        },\r\n      ];\r\n      this.exChangeRate = exChangeData;\r\n      // console.log(\"exChangeRate\", this.exChangeRate);\r\n    },\r\n\r\n    // 코인리스트\r\n    async getCoinList() {\r\n      try {\r\n        const responseColinList = await axios.get(\r\n          `https://min-api.cryptocompare.com/data/top/totaltoptiervolfull`,\r\n          {\r\n            params: {\r\n              // 요청제한\r\n              // api_key: this.sendDataKr.Apikey,\r\n              limit: 69,\r\n              tsym: \"KRW\",\r\n            },\r\n          }\r\n        );\r\n        const coinList = [];\r\n        for (let i = 0; i < responseColinList.data.Data.length; i++) {\r\n          coinList.push({\r\n            name: responseColinList.data.Data[i].CoinInfo.Name,\r\n            img: responseColinList.data.Data[i].CoinInfo.ImageUrl,\r\n          });\r\n        }\r\n        // 클레이 추가\r\n        coinList.unshift({\r\n          name: \"KLAY\",\r\n          img: \"/media/36569485/klay.png\",\r\n        });\r\n        this.coinList = coinList;\r\n        // console.log(\"this.coinList after\", this.coinList);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    //레이스 차트 데이터\r\n    async getTableData() {\r\n      try {\r\n        let duration = this.sendDataKr.duration;\r\n        const responseChart = await axios.get(\r\n          `https://min-api.cryptocompare.com/data/v2/${duration}`,\r\n          {\r\n            params: {\r\n              fsym: this.sendDataKr.fsym.name,\r\n              Apikey: this.sendDataKr.Apikey,\r\n              limit: this.sendDataKr.limit,\r\n              tsym: this.sendDataKr.tsym,\r\n            },\r\n          }\r\n        );\r\n        // console.log(\"responseData\", responseChart.data.Data.Data);\r\n        const responseData = [];\r\n        for (\r\n          let i = 0;\r\n          i < Object.keys(responseChart.data.Data.Data).length;\r\n          i++\r\n        ) {\r\n          responseData.push({\r\n            name: this.sendDataKr.fsym.name,\r\n            time: responseChart.data.Data.Data[i].time,\r\n            high: responseChart.data.Data.Data[i].high,\r\n            volumeto: responseChart.data.Data.Data[i].volumeto,\r\n          });\r\n        }\r\n\r\n        this.priceData = responseData;\r\n        const raceData = [];\r\n        for (let i = 0; i < responseData.length; i++) {\r\n          const reData = {};\r\n          const key = responseData[i].time;\r\n          reData[key] = responseData[i];\r\n          raceData.push(reData);\r\n        }\r\n        this.raceData = JSON.stringify(raceData);\r\n      } catch (error) {\r\n        console.log(Object.keys(error), error.message);\r\n      }\r\n    },\r\n\r\n    async chart1() {\r\n      try {\r\n        let duration = this.sendDataKr.duration;\r\n        const responseChart = await axios.get(\r\n          `https://min-api.cryptocompare.com/data/v2/${duration}`,\r\n          {\r\n            params: {\r\n              fsym: this.sendDataKr.fsym.name,\r\n              Apikey: this.sendDataKr.Apikey,\r\n              limit: this.sendDataKr.limit,\r\n              tsym: this.sendDataKr.tsym,\r\n            },\r\n          }\r\n        );\r\n\r\n        const getChartData = [];\r\n        for (let i = 0; i < responseChart.data.Data.Data.length; i++) {\r\n          getChartData.push({\r\n            high: responseChart.data.Data.Data[i].high,\r\n            low: responseChart.data.Data.Data[i].low,\r\n            open: responseChart.data.Data.Data[i].open,\r\n            close: responseChart.data.Data.Data[i].close,\r\n            date: new Date(responseChart.data.Data.Data[i].time * 1000),\r\n            volume: responseChart.data.Data.Data[i].volumeto,\r\n            value: responseChart.data.Data.Data[i].open,\r\n          });\r\n        }\r\n        this.chartData = getChartData;\r\n\r\n        this.drawChart();\r\n        this.isLoading = false;\r\n      } catch (error) {\r\n        console.log(Object.keys(error), error.message);\r\n      }\r\n    },\r\n    drawChart() {\r\n      let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n      chart.padding(40, 40, 40, 40);\r\n\r\n      chart.numberFormatter.bigNumberPrefixes = [\r\n        { number: 1e1, suffix: \"만원\" },\r\n        { number: 1e3, suffix: \"백만원\" },\r\n        { number: 1e6, suffix: \"100억\" },\r\n        { number: 1e9, suffix: \"100조\" },\r\n      ];\r\n\r\n      let label = chart.plotContainer.createChild(am4core.Label);\r\n      label.x = am4core.percent(97);\r\n      label.y = am4core.percent(95);\r\n      label.horizontalCenter = \"right\";\r\n      label.verticalCenter = \"middle\";\r\n      label.dx = -15;\r\n      label.fontSize = 30;\r\n\r\n      let playButton = chart.plotContainer.createChild(am4core.PlayButton);\r\n      playButton.x = am4core.percent(97);\r\n      playButton.y = am4core.percent(95);\r\n      playButton.dy = -2;\r\n      playButton.verticalCenter = \"middle\";\r\n      playButton.hidden = true;\r\n      playButton.events.on(\"toggled\", function (event) {\r\n        if (event.target.isActive) {\r\n          play();\r\n        } else {\r\n          stop();\r\n        }\r\n      });\r\n\r\n      let stepDuration = 300;\r\n\r\n      let categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\r\n      categoryAxis.renderer.grid.template.location = 0;\r\n      categoryAxis.dataFields.category = \"name\";\r\n      categoryAxis.renderer.minGridDistance = 1;\r\n      categoryAxis.renderer.inversed = true;\r\n      categoryAxis.renderer.grid.template.disabled = true;\r\n      categoryAxis.fontSize = 14;\r\n      let valueAxis = chart.xAxes.push(new am4charts.ValueAxis());\r\n      valueAxis.min = 0;\r\n      valueAxis.rangeChangeEasing = am4core.ease.linear;\r\n      valueAxis.rangeChangeDuration = stepDuration;\r\n      valueAxis.extraMax = 0.1;\r\n      valueAxis.fontSize = 18;\r\n\r\n      let series = chart.series.push(new am4charts.ColumnSeries());\r\n      series.dataFields.categoryY = \"name\";\r\n      series.dataFields.valueX = \"high\";\r\n      series.tooltipText = \"{valueX.value}\";\r\n      series.columns.template.strokeOpacity = 0;\r\n      series.columns.template.column.cornerRadiusBottomRight = 5;\r\n      series.columns.template.column.cornerRadiusTopRight = 5;\r\n      series.interpolationDuration = stepDuration;\r\n      series.interpolationEasing = am4core.ease.linear;\r\n\r\n      let labelBullet = series.bullets.push(new am4charts.LabelBullet());\r\n      labelBullet.label.horizontalCenter = \"right\";\r\n      labelBullet.label.text =\r\n        \"{values.valueX.workingValue.formatNumber('#.0as')}\";\r\n      labelBullet.label.textAlign = \"end\";\r\n      labelBullet.label.dx = -10;\r\n\r\n      chart.zoomOutButton.disabled = true;\r\n      chart.responsive.enabled = true;\r\n\r\n      chart.responsive.useDefault = false;\r\n      chart.responsive.enabled = true;\r\n\r\n      chart.responsive.rules.push({\r\n        relevant: function (target) {\r\n          if (target.pixelWidth <= 400) {\r\n            return true;\r\n          }\r\n\r\n          return false;\r\n        },\r\n        // responsive\r\n        state: function (target, stateId) {\r\n          if (target instanceof am4charts.Chart) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.paddingTop = 5;\r\n            state.properties.paddingRight = 15;\r\n            state.properties.paddingBottom = 5;\r\n            state.properties.paddingLeft = 0;\r\n            label.fontSize = 14;\r\n            return state;\r\n          }\r\n          return null;\r\n        },\r\n      });\r\n      // as by default columns of the same series are of the same color, we add adapter which takes colors from chart.colors color set\r\n      series.columns.template.adapter.add(\"fill\", function (fill, target) {\r\n        return chart.colors.getIndex(target.dataItem.index);\r\n      });\r\n\r\n      let year = 1534464000;\r\n      label.text =\r\n        new Date(year * 1000).getFullYear() +\r\n        \"-\" +\r\n        (new Date(year * 1000).getMonth() + 1);\r\n      let interval;\r\n\r\n      function play() {\r\n        interval = setInterval(function () {\r\n          nextYear();\r\n        }, stepDuration);\r\n        nextYear();\r\n      }\r\n\r\n      function stop() {\r\n        if (interval) {\r\n          clearInterval(interval);\r\n        }\r\n      }\r\n\r\n      function nextYear() {\r\n        year = year + 1728000;\r\n\r\n        // if (year > 1534464000) {\r\n        //   year = 1620864000;\r\n        // }\r\n\r\n        let newData = allData[year];\r\n        let itemsWithNonZero = 0;\r\n        for (var i = 0; i < chart.data.length; i++) {\r\n          chart.data[i].high = newData[i].high;\r\n          if (chart.data[i].high > 0) {\r\n            itemsWithNonZero++;\r\n          }\r\n        }\r\n\r\n        if (year == 1534464000) {\r\n          series.interpolationDuration = stepDuration / 4;\r\n          valueAxis.rangeChangeDuration = stepDuration / 4;\r\n        } else {\r\n          series.interpolationDuration = stepDuration;\r\n          valueAxis.rangeChangeDuration = stepDuration;\r\n        }\r\n\r\n        chart.invalidateRawData();\r\n        label.text =\r\n          new Date(year * 1000).getFullYear() +\r\n          \"-\" +\r\n          (new Date(year * 1000).getMonth() + 1);\r\n\r\n        categoryAxis.zoom({\r\n          start: 0,\r\n          end: itemsWithNonZero / categoryAxis.dataItems.length,\r\n        });\r\n      }\r\n\r\n      categoryAxis.sortBySeries = series;\r\n\r\n      let allData = {\r\n        1534464000: [\r\n          { name: \"xrp\", open: 339.73, high: 1000.0000000000001 },\r\n          { name: \"btc\", open: 7334123.39, high: 1000.0000000000001 },\r\n          { name: \"ETH\", open: 333189.23, high: 1000 },\r\n        ],\r\n        1536192000: [\r\n          { name: \"xrp\", open: 320.35, high: 942.9546993200483 },\r\n          { name: \"btc\", open: 7682850.67, high: 1047.5485973518644 },\r\n          { name: \"ETH\", open: 262292.52, high: 787.2178821626378 },\r\n        ],\r\n        1537920000: [\r\n          { name: \"xrp\", open: 593.33, high: 1746.475142024549 },\r\n          { name: \"btc\", open: 7298176.16, high: 995.0986330487686 },\r\n          { name: \"ETH\", open: 248283.95, high: 745.1739961702845 },\r\n        ],\r\n        1539648000: [\r\n          { name: \"xrp\", open: 505.85, high: 1488.9765401936834 },\r\n          { name: \"btc\", open: 7410613.37, high: 1010.4293282145068 },\r\n          { name: \"ETH\", open: 235212.87, high: 705.943796562692 },\r\n        ],\r\n        1541376000: [\r\n          { name: \"xrp\", open: 523.83, high: 1541.9009213198717 },\r\n          { name: \"btc\", open: 7219979.67, high: 984.4366239930415 },\r\n          { name: \"ETH\", open: 236165.54, high: 708.8030426433652 },\r\n        ],\r\n        1543104000: [\r\n          { name: \"xrp\", open: 435, high: 1280.4285756335914 },\r\n          { name: \"btc\", open: 4495000, high: 612.8885159102839 },\r\n          { name: \"ETH\", open: 131388.85, high: 394.3370258396408 },\r\n        ],\r\n        1544832000: [\r\n          { name: \"xrp\", open: 325.03, high: 956.7303446854854 },\r\n          { name: \"btc\", open: 3637000, high: 495.9011195474311 },\r\n          { name: \"ETH\", open: 94562, high: 283.8086933362162 },\r\n        ],\r\n        1546560000: [\r\n          { name: \"xrp\", open: 401.13, high: 1180.7317575721897 },\r\n          { name: \"btc\", open: 4274432.21, high: 582.8143300436074 },\r\n          { name: \"ETH\", open: 166443.89, high: 499.5476294356814 },\r\n        ],\r\n        1548288000: [\r\n          { name: \"xrp\", open: 353, high: 1039.060430341742 },\r\n          { name: \"btc\", open: 3996284.75, high: 544.889216814772 },\r\n          { name: \"ETH\", open: 130998.21, high: 393.16459898778845 },\r\n        ],\r\n        1550016000: [\r\n          { name: \"xrp\", open: 334.11, high: 983.4574515056074 },\r\n          { name: \"btc\", open: 3980902.25, high: 542.7918291404694 },\r\n          { name: \"ETH\", open: 134116.6, high: 402.5238150704932 },\r\n        ],\r\n        1551744000: [\r\n          { name: \"xrp\", open: 337.14, high: 992.3762988255379 },\r\n          { name: \"btc\", open: 4154849.55, high: 566.5093602958867 },\r\n          { name: \"ETH\", open: 140517.01, high: 421.7333495443416 },\r\n        ],\r\n        1553472000: [\r\n          { name: \"xrp\", open: 349.99, high: 1030.200453301151 },\r\n          { name: \"btc\", open: 4528184.61, high: 617.4132025340797 },\r\n          { name: \"ETH\", open: 154411.1, high: 463.4336469999346 },\r\n        ],\r\n        1555200000: [\r\n          { name: \"xrp\", open: 378.82, high: 1115.0619609690048 },\r\n          { name: \"btc\", open: 5890033.32, high: 803.099839856935 },\r\n          { name: \"ETH\", open: 190248.08, high: 570.9910851560238 },\r\n        ],\r\n        1556928000: [\r\n          { name: \"xrp\", open: 352.76, high: 1038.3539869896683 },\r\n          { name: \"btc\", open: 6595874.4, high: 899.3405277300634 },\r\n          { name: \"ETH\", open: 191939.95, high: 576.0688903419838 },\r\n        ],\r\n        1558656000: [\r\n          { name: \"xrp\", open: 457.97, high: 1348.041091454979 },\r\n          { name: \"btc\", open: 9485253.29, high: 1293.304296316182 },\r\n          { name: \"ETH\", open: 295655.35, high: 887.3496601315715 },\r\n        ],\r\n        1560384000: [\r\n          { name: \"xrp\", open: 483.71, high: 1423.8071409648837 },\r\n          { name: \"btc\", open: 9794723.06, high: 1335.5001735251692 },\r\n          { name: \"ETH\", open: 315096.24, high: 945.6975545097902 },\r\n        ],\r\n        1562112000: [\r\n          { name: \"xrp\", open: 484.74, high: 1426.838960350867 },\r\n          { name: \"btc\", open: 13178219.86, high: 1796.8363987396729 },\r\n          { name: \"ETH\", open: 354362.33, high: 1063.5467719049623 },\r\n        ],\r\n        1563840000: [\r\n          { name: \"xrp\", open: 381.82, high: 1123.8925028699261 },\r\n          { name: \"btc\", open: 12285259.38, high: 1675.0821777488534 },\r\n          { name: \"ETH\", open: 258359, high: 775.4122184561609 },\r\n        ],\r\n        1565568000: [\r\n          { name: \"xrp\", open: 364, high: 1071.4390839784535 },\r\n          { name: \"btc\", open: 13911390.78, high: 1896.803481513283 },\r\n          { name: \"ETH\", open: 260421.24, high: 781.6016141938321 },\r\n        ],\r\n        1567296000: [\r\n          { name: \"xrp\", open: 312, high: 918.3763576958173 },\r\n          { name: \"btc\", open: 11606726.64, high: 1582.5649532738503 },\r\n          { name: \"ETH\", open: 207644.34, high: 623.2024366453862 },\r\n        ],\r\n        1569024000: [\r\n          { name: \"xrp\", open: 348.04, high: 1024.460601065552 },\r\n          { name: \"btc\", open: 12078060.54, high: 1646.83083413463 },\r\n          { name: \"ETH\", open: 258953.62, high: 777.1968499702107 },\r\n        ],\r\n        1570752000: [\r\n          { name: \"xrp\", open: 321.25, high: 945.6038618903247 },\r\n          { name: \"btc\", open: 10162892.55, high: 1385.6996957341894 },\r\n          { name: \"ETH\", open: 226937.39, high: 681.1066192025476 },\r\n        ],\r\n        1572480000: [\r\n          { name: \"xrp\", open: 344.83, high: 1015.0119212315662 },\r\n          { name: \"btc\", open: 10694696.54, high: 1458.2106096799662 },\r\n          { name: \"ETH\", open: 213786.98, high: 641.6383266650006 },\r\n        ],\r\n        1574208000: [\r\n          { name: \"xrp\", open: 296.04, high: 871.3978747829159 },\r\n          { name: \"btc\", open: 9505926.97, high: 1296.123130810866 },\r\n          { name: \"ETH\", open: 205613.2, high: 617.1063812596824 },\r\n        ],\r\n        1575936000: [\r\n          { name: \"xrp\", open: 264.25, high: 777.8235657728196 },\r\n          { name: \"btc\", open: 8679015.94, high: 1183.374682764916 },\r\n          { name: \"ETH\", open: 174187.85, high: 522.7895571534531 },\r\n        ],\r\n        1577664000: [\r\n          { name: \"xrp\", open: 225.71, high: 664.3805374856504 },\r\n          { name: \"btc\", open: 8490112.26, high: 1157.617864948411 },\r\n          { name: \"ETH\", open: 154520.04, high: 463.7606083485952 },\r\n        ],\r\n        1579392000: [\r\n          { name: \"xrp\", open: 275.76, high: 811.7034115326877 },\r\n          { name: \"btc\", open: 10088223.72, high: 1375.5186794041656 },\r\n          { name: \"ETH\", open: 196922.13, high: 591.0218946752872 },\r\n        ],\r\n        1581120000: [\r\n          { name: \"xrp\", open: 327.71, high: 964.6189621169752 },\r\n          { name: \"btc\", open: 11498899.79, high: 1567.8628758385262 },\r\n          { name: \"ETH\", open: 261714.96, high: 785.484452783783 },\r\n        ],\r\n        1582848000: [\r\n          { name: \"xrp\", open: 288.73, high: 849.8807876843376 },\r\n          { name: \"btc\", open: 10680242.62, high: 1456.2398329106923 },\r\n          { name: \"ETH\", open: 275550.26, high: 827.008303959885 },\r\n        ],\r\n        1584576000: [\r\n          { name: \"xrp\", open: 184.79, high: 543.9319459570836 },\r\n          { name: \"btc\", open: 6739637.65, high: 918.9424954575248 },\r\n          { name: \"ETH\", open: 147665.46, high: 443.1879745932964 },\r\n        ],\r\n        1586304000: [\r\n          { name: \"xrp\", open: 231.81, high: 682.3359726841904 },\r\n          { name: \"btc\", open: 8652295.67, high: 1179.7314020919412 },\r\n          { name: \"ETH\", open: 197878, high: 593.8907449079312 },\r\n        ],\r\n        1588032000: [\r\n          { name: \"xrp\", open: 240.88, high: 709.0336443646426 },\r\n          { name: \"btc\", open: 9485432.2, high: 1293.3286905062557 },\r\n          { name: \"ETH\", open: 239602.02, high: 719.1169414449561 },\r\n        ],\r\n        1589760000: [\r\n          { name: \"xrp\", open: 241.93, high: 712.124334029965 },\r\n          { name: \"btc\", open: 11615807.42, high: 1583.8031080630622 },\r\n          { name: \"ETH\", open: 248345.96, high: 745.3601066276963 },\r\n        ],\r\n        1591488000: [\r\n          { name: \"xrp\", open: 245.41, high: 722.3677626350337 },\r\n          { name: \"btc\", open: 11636503.48, high: 1586.6249940471757 },\r\n          { name: \"ETH\", open: 291261.68, high: 874.1629493846485 },\r\n        ],\r\n        1593216000: [\r\n          { name: \"xrp\", open: 219.38, high: 645.7480940747064 },\r\n          { name: \"btc\", open: 11036142.06, high: 1504.7663467249085 },\r\n          { name: \"ETH\", open: 276565.72, high: 830.0560015100127 },\r\n        ],\r\n        1594944000: [\r\n          { name: \"xrp\", open: 232.19, high: 683.4545079916404 },\r\n          { name: \"btc\", open: 10924379.91, high: 1489.527695279204 },\r\n          { name: \"ETH\", open: 279336.39, high: 838.3716064291755 },\r\n        ],\r\n        1596672000: [\r\n          { name: \"xrp\", open: 357.52, high: 1052.3651134724635 },\r\n          { name: \"btc\", open: 13848633.63, high: 1888.2466102059952 },\r\n          { name: \"ETH\", open: 472515.38, high: 1418.1592244143067 },\r\n        ],\r\n        1598400000: [\r\n          { name: \"xrp\", open: 329.43, high: 969.6818061401701 },\r\n          { name: \"btc\", open: 13476857.58, high: 1837.5553373393684 },\r\n          { name: \"ETH\", open: 455922.09, high: 1368.3578247712271 },\r\n        ],\r\n        1600128000: [\r\n          { name: \"xrp\", open: 291.52, high: 858.0931916521944 },\r\n          { name: \"btc\", open: 12644710.24, high: 1724.0929239397487 },\r\n          { name: \"ETH\", open: 446737.61, high: 1340.7924679918376 },\r\n        ],\r\n        1601856000: [\r\n          { name: \"xrp\", open: 289.19, high: 851.2348041091454 },\r\n          { name: \"btc\", open: 12456659.97, high: 1698.4524676779406 },\r\n          { name: \"ETH\", open: 411443.48, high: 1234.8642841786932 },\r\n        ],\r\n        1603584000: [\r\n          { name: \"xrp\", open: 288.25, high: 848.4679009801902 },\r\n          { name: \"btc\", open: 14760788.03, high: 2012.6179019739675 },\r\n          { name: \"ETH\", open: 463931.57, high: 1392.3966569987872 },\r\n        ],\r\n        1605312000: [\r\n          { name: \"xrp\", open: 292.14, high: 859.9181703117181 },\r\n          { name: \"btc\", open: 17983086.23, high: 2451.9748678512487 },\r\n          { name: \"ETH\", open: 525106.12, high: 1575.9996804218433 },\r\n        ],\r\n        1607040000: [\r\n          { name: \"xrp\", open: 686.88, high: 2021.8408736349454 },\r\n          { name: \"btc\", open: 21171922.11, high: 2886.7692816387157 },\r\n          { name: \"ETH\", open: 671361.65, high: 2014.9560356437694 },\r\n        ],\r\n        1608768000: [\r\n          { name: \"xrp\", open: 295.95, high: 871.1329585258882 },\r\n          { name: \"btc\", open: 26401163.82, high: 3599.7708814113644 },\r\n          { name: \"ETH\", open: 664781.3, high: 1995.206447699405 },\r\n        ],\r\n        1610496000: [\r\n          { name: \"xrp\", open: 331.35, high: 975.3333529567599 },\r\n          { name: \"btc\", open: 38529902.28, high: 5253.511596564509 },\r\n          { name: \"ETH\", open: 1187491.59, high: 3564.015529553582 },\r\n        ],\r\n        1612224000: [\r\n          { name: \"xrp\", open: 404.06, high: 1189.3562534954228 },\r\n          { name: \"btc\", open: 36522581.09, high: 4979.815466398911 },\r\n          { name: \"ETH\", open: 1496695.37, high: 4492.028058650036 },\r\n        ],\r\n        1613952000: [\r\n          { name: \"xrp\", open: 619.67, high: 1824.007299914638 },\r\n          { name: \"btc\", open: 65416083.59, high: 8919.414101921731 },\r\n          { name: \"ETH\", open: 2202559.53, high: 6610.536390987188 },\r\n        ],\r\n        1615680000: [\r\n          { name: \"xrp\", open: 528.44, high: 1555.4705207076208 },\r\n          { name: \"btc\", open: 70613486.63, high: 9628.074532572053 },\r\n          { name: \"ETH\", open: 2217263.48, high: 6654.667319228776 },\r\n        ],\r\n        1617408000: [\r\n          { name: \"xrp\", open: 758.35, high: 2232.213816854561 },\r\n          { name: \"btc\", open: 73735188.64, high: 10053.71531388975 },\r\n          { name: \"ETH\", open: 2668476.48, high: 8008.891763998495 },\r\n        ],\r\n        1619136000: [\r\n          { name: \"xrp\", open: 1332.09, high: 3921.0255202660933 },\r\n          { name: \"btc\", open: 59462010.42, high: 8107.582495963436 },\r\n          { name: \"ETH\", open: 2760226.52, high: 8284.260928842148 },\r\n        ],\r\n        1620864000: [\r\n          { name: \"xrp\", open: 1559.55, high: 4590.557207193948 },\r\n          { name: \"btc\", open: 61092865.33, high: 8329.94784534161 },\r\n          { name: \"ETH\", open: 3311493.45, high: 9938.776982677382 },\r\n        ],\r\n      };\r\n\r\n      // chart.data = JSON.parse(JSON.stringify(allData[year]));\r\n      chart.data = JSON.parse(JSON.stringify(allData[year]));\r\n      console.log(\"chart.data\", chart.data);\r\n      console.log(this.priceData);\r\n      play();\r\n      categoryAxis.zoom({ start: 0, end: 1 / chart.data.length });\r\n\r\n      series.events.on(\"inited\", function () {\r\n        setTimeout(function () {\r\n          playButton.isActive = true; // this starts interval\r\n        }, 1728000);\r\n      });\r\n    },\r\n  },\r\n\r\n  beforeDestroy() {\r\n    if (this.chart) {\r\n      this.chart.dispose();\r\n    }\r\n  },\r\n  mounted() {\r\n        document.cookie = 'cross-site-cookie=bar; SameSite=None; Secure';\r\n  },\r\n  async created() {\r\n    this.chart1();\r\n    await this.getExChangeMoney();\r\n    await this.getCoinList();\r\n    await this.getTableData();\r\n    await  this.$refs.first.focus();\r\n     this.isLoading = false;\r\n  },\r\n  computed: {\r\n    isMobile() {\r\n      return this.$vuetify.breakpoint.name === \"xs\";\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"css\">\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./race.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./race.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./race.vue?vue&type=template&id=301008f6&\"\nimport script from \"./race.vue?vue&type=script&lang=js&\"\nexport * from \"./race.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}